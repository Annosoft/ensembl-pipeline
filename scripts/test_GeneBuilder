#!/usr/local/bin/perl

use Bio::EnsEMBL::DBSQL::Obj;
use Bio::EnsEMBL::Pipeline::GeneBuilder;
use Bio::EnsEMBL::DB::VirtualContig;

use Getopt::Long;
use strict;

my $infile;
my $vcontig = 0;

&GetOptions('infile:s' => \$infile,
            'vcontig'  => \$vcontig,
	    );

my $db = new Bio::EnsEMBL::DBSQL::Obj(-host   => 'ensrv3',
				      -user   => 'ensro',
				      -dbname => 'ensembl07',
                                      -perlonlyfeatures => 1,
 				      );

$| = 1;

my @contigs = get_contigs($infile,@ARGV);

foreach my $contigid (@contigs) {
    eval {
	
	my $contig = $db->get_Contig($contigid);
        my $genebuilder;

        if ($vcontig) {	
	  my $vc     = new Bio::EnsEMBL::DB::VirtualContig(-focuscontig   => $contig,
							 -focusposition => 1,
							 -ori           => 1,
							 -left          => 50000,
							 -right         => 50000);
    
	  $genebuilder = new Bio::EnsEMBL::Pipeline::GeneBuilder(-contig => $vc);
        } else {
	  $genebuilder = new Bio::EnsEMBL::Pipeline::GeneBuilder(-contig => $contig);
        }
	$genebuilder->build_Genes;
    };
    if ($@) {
	print STDERR "Error building genes on : $contigid [$@]\n";
    }
}


sub get_contigs {
    my ($infile,@args) = @_;
    
    my @contigs;
    
    if (-e $infile) {
	open(IN,"<$infile") || die "Couldn't open $infile";
	
	while (<IN>) {
	    chomp;
	    push(@contigs,$_);
	}
	
    }
    
    push(@contigs,@args);
    
    return @contigs;
}

