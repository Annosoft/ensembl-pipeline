#!/usr/local/bin/perl

$| = 1;

use strict;
use Getopt::Long;

use Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor;
use Bio::EnsEMBL::Pipeline::Monitor;

my $host = 'ecs2a';
my $port;
my $dbname = 'rat_Nov02';
my $user = 'ensro';
my $pass = undef;

my $current = 1;
my $current_summary = 1;
my $finished = 1;
my $analysis;
my $rules;
my $conditions;
my $status_analysis;

&GetOptions( 
	    'host:s'    => \$host,
	    'port:n'    => \$port,
	    'user:s'    => \$user,
	    'pass:s'    => \$pass,
	    'dbname:s'  => \$dbname,
	    'current'   => \$current,
	    'current_summary' => \$current_summary,
	    'finished'  => \$finished,
	    'rules'     => \$rules,
	    'conditions'=> \$conditions,
	    'status_analysis:s'    => \$status_analysis,
	    'analysis'  => \$analysis,
	   );


my $db = new Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor(-host   => $host,
						      -user   => $user,
						      -pass   => $pass,
						      -dbname => $dbname);

my $monitor = new Bio::EnsEMBL::Pipeline::Monitor(-dbobj => $db);

$monitor->show_current_status                 if ($current);
$monitor->show_current_status_summary         if ($current_summary);
$monitor->show_finished_summary               if ($finished);
$monitor->show_analysisprocess                if ($analysis);
$monitor->show_Rules                          if ($rules);
$monitor->show_Rules_and_Conditions           if ($conditions);

if ($status_analysis) {
  my ($status,$analysis)  = split(/:/,$status_analysis);

  $monitor->show_jobs_by_status_and_analysis($status,$analysis);
}
