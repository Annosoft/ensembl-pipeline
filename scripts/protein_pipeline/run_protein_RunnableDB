# Copyright GRL & EBI 2001
# Author: Emmanuel Mongin
# Creation: 03.19.2001


=head1 Run_protein_RunnableDB

=head2 Description

The purpose of this perl script is to run the ensembl protein analysis runnables.
This script is called by submit_prot_analysis.pl

=cut

use strict;
use Getopt::Long;

BEGIN {
    require "Bio/EnsEMBL/Pipeline/Prot_analysis_Conf.pl";
}




use Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor;
use Bio::EnsEMBL::DBLoader;

my $host   = '';
my $port   = undef;
my $dbname = '';
my $dbuser = 'ensro';
my $dbpass = undef;
my $runnable;
my $input_id;
my $analysisid;
my $write  = 0;
my $check  = 0;
my $params;
my $all;

my %db_conf =  %::db_conf;

my %scripts_conf = %::scripts_conf;

#Get DBs variables



&GetOptions( 
	     'host:s'      => \$host,
	     'port:n'      => \$port,
	     'dbname:s'    => \$dbname,
	     'dbuser:s'    => \$dbuser,
	     'dbpass:s'    => \$dbpass,
	     'input_id:s'  => \$input_id,
	     'runnable:s'  => \$runnable,
	     'analysis:n'  => \$analysisid,
	     'write'       => \$write,
             'check'       => \$check,
             'parameters:s'=> \$params,
	     );

$| = 1;

die "No runnable entered" unless defined ($runnable);
$runnable = "Bio::EnsEMBL::Pipeline::$runnable"
 unless $runnable =~ /Bio::EnsEMBL::Pipeline/;

(my $file = $runnable) =~ s/::/\//g;
require "$file.pm";

if ($check) {
   exit(0);
}
my $db = new Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor(
    -host             => $host,
    -user             => $dbuser,
    -port             => $port,
    -dbname           => $dbname,
    -pass             => $dbpass,
    -perlonlyfeatures => 0
);

my $sf;


my $analysis = $db->get_AnalysisAdaptor->fetch_by_dbID($analysisid);


my %hparams;
# eg -parameters param1=value1,param2=value2
foreach my $p(split /,/, $params){
  my @sp = split /=/, $p;
  $sp[0] = '-' . $sp[0];
  $hparams{$sp[0]} =  $sp[1];
}

my $runobj = "$runnable"->new(-dbobj    => $db,
			      -input_id => $input_id,
			      -analysis => $analysis,
			      -seqfetcher => $sf,
			      %hparams,
			     );

$runobj->fetch_input;
$runobj->run;
 



$runobj->write_output;

#my @out = $runobj->output;

#foreach my $out (@out) {
#    if ($out->isa ("Bio::EnsEMBL::FeaturePair")) {
#      print ($out->gffstring . "\n");
#    } else {
#      print $out->gffstring . "\n";
#    }
#}





