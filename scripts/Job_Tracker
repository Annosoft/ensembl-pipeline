#!/usr/local/bin/perl


=head1 NAME

Job_submitter - looks at the analysis database and
submits a chunk of jobs.


=head1 SYNOPSIS

    Job_Submitter

=head1 DESCRIPTION



=head1 OPTIONS

    -host      host name for database (gets put as host= in locator)

    -port      For RDBs, what port to connect to (port= in locator)

    -dbname    For RDBs, what name to connect to (dbname= in locator)

    -dbuser    For RDBs, what username to connect as (dbuser= in locator)

    -pass      For RDBs, what password to use (dbpass= in locator)

=cut


use strict;

use Getopt::Long;

use Bio::EnsEMBL::DBSQL::Obj;
use Bio::EnsEMBL::Pipeline::DBSQL::Obj;
use Bio::EnsEMBL::Pipeline::DBSQL::Job;
use Bio::EnsEMBL::Pipeline::SimpleJob;
use Bio::EnsEMBL::Pipeline::RunnableDBI;
use FreezeThaw;

my $anahost     = 'localhost';
my $anaport     = '410000';
my $anadbname   = 'pipeline',
my $anadbuser   = 'root';
my $anapass     =  undef;
my $status      = 'FAILED';

&GetOptions(
	    'anahost:s'     => \$anahost,
	    'anaport:n'     => \$anaport,
	    'anadbname:s'   => \$anadbname,
	    'anadbuser:s'   => \$anadbuser,
	    'anapass:s'     => \$anapass,
            'status:s'      => \$status,
	    );



my $anadb  = new Bio::EnsEMBL::Pipeline::DBSQL::Obj(-host   => $anahost,
						    -port   => $anaport,
						    -dbname => $anadbname,
						    -user   => $anadbuser,
						    -pass   => $anapass);


my @jobs = $anadb->get_JobsByCurrentStatus($status);

    print("<TABLE>\n");
foreach my $job (@jobs) {
    $job->_dbobj($anadb);
    $job->get_all_status;
    my $status = $job->current_status;

    print("<TR><TD>"            . $job->id . "</TD><TD>" .
          " Status : "      . $status->status . "</TD><TD>" .
          "<a href=\"file:" . $job->stdout_file . "\">stdout</a>" . "</TD><TD>" .
          "<a href=\"file:" . $job->stderr_file . "\">stderr</a></TD><TD></TR>" 
);    
} 
print("</TABLE>\n");
  
