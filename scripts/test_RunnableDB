#!/usr/local/bin/perl


=head1 NAME

test_RunnableDB

=head1 SYNOPSIS

test_RunnableDB

=head1 DESCRIPTION

Runs a RunnableDB on an input seq (extracted from a database) and
optionally writes features or whatever back into the database.

Requires a DB connexion, input ID, name of runnable and analysis ID.

=head1 OPTIONS

    -host      host name for database (gets put as host= in DBAdaptor)

    -port      For RDBs, what port to connect to (port= in DBAdaptor)

    -dbname    For RDBs, what name to connect to (dbname= in DBAdaptor)

    -dbuser    For RDBs, what username to connect as (dbuser= in DBAdaptor)

    -dbpass    For RDBs, what password to use (pass= in DBAdaptor)

    -input_id  The input id for the RunnableDB

    -runnable  The name of the runnable module we want to run

    -analysis  The number of the analysisprocess we want to run

=cut

use strict;
use Getopt::Long;

BEGIN {
    require "Bio/EnsEMBL/Pipeline/pipeConf.pl";
}


use Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor;
use Bio::EnsEMBL::Pipeline::SeqFetcher::Pfetch;
use Bio::EnsEMBL::Pipeline::SeqFetcher::Getz;
use Bio::EnsEMBL::DBLoader;
my $host   = '';
my $port   = undef;
my $dbname = '';
my $dbuser = 'ensro';
my $dbpass = undef;
my $runnable;
my $input_id;
my $analysisid;
my $write  = 0;
my $check  = 0;
my $params;
my $pepfile;

&GetOptions( 
	     'host:s'      => \$host,
	     'port:n'      => \$port,
	     'dbname:s'    => \$dbname,
	     'dbuser:s'    => \$dbuser,
	     'dbpass:s'    => \$dbpass,
	     'input_id:s'  => \$input_id,
	     'runnable:s'  => \$runnable,
	     'analysis:n'  => \$analysisid,
	     'write'       => \$write,
             'check'       => \$check,
             'parameters:s'=> \$params,
	     'pepfile:s'   => \$pepfile,
	     );

$| = 1;

die "No runnable entered" unless defined ($runnable);
$runnable = "Bio::EnsEMBL::Pipeline::$runnable"
 unless $runnable =~ /Bio::EnsEMBL::Pipeline/;

(my $file = $runnable) =~ s/::/\//g;
require "$file.pm";

if ($check) {
   exit(0);
}
my $db = new Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor(
    -host             => $host,
    -user             => $dbuser,
    -port             => $port,
    -dbname           => $dbname,
    -pass             => $dbpass,
    -perlonlyfeatures => 0
);

my $sf;

if (defined ($::pipeConf{'seqfetcher'})) {
    my $sfname = $::pipeConf{'seqfetcher'};
    $sf = "$sfname"->new;
} else {
    $sf = new Bio::EnsEMBL::Pipeline::SeqFetcher::Pfetch;
}

die "No input id entered" unless defined ($input_id);


my $analysis = $db->get_AnalysisAdaptor->fetch_by_dbID($analysisid);

my %hparams;
# eg -parameters param1=value1,param2=value2
foreach my $p(split /,/, $params){
  my @sp = split /=/, $p;
  $sp[0] = '-' . $sp[0];
  $hparams{$sp[0]} =  $sp[1];
}

my $runobj = "$runnable"->new(-db       => $db,
			      -input_id => $input_id,
			      -analysis => $analysis,
			      -seqfetcher => $sf,
			      %hparams,
			     );

if ($pepfile) {
    $runobj->pep_file($pepfile);
}

$runobj->fetch_input;
$runobj->run;

 
my @out = $runobj->output;

if ($write) {
  $runobj->write_output;
}
foreach my $out (@out) {
    if ($out->isa ("Bio::EnsEMBL::FeaturePair")) {
      print ($out->gffstring . "\n");
    } else {
      print $out->gffstring . "\n";
    }
}

