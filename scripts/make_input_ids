#!/usr/local/bin/perl

use Bio::EnsEMBL::Analysis;
use Bio::EnsEMBL::DBSQL::AnalysisAdaptor;
use Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor;
use Bio::EnsEMBL::Pipeline::Utils::InputIDFactory;

use strict;
use Getopt::Long;

my $host;
my $user = 'ensadmin';
my $pass = 'ensembl';
my $port = 3306;
my $dbname;
my $logic_name;
my $slicesize;
my $type;
my $contig;
my $slice;
my $input_type;

&GetOptions(
            'host:s'       => \$host,
            'port:n'       => \$port,
            'user:s'       => \$user,
            'pass:s'       => \$pass,
            'dbname:s'     => \$dbname,
	    'contig'       => \$contig,
	    'slice'        => \$slice,
            'slice_size:s' => \$slicesize,
            'logic_name:s' => \$logic_name,
            'intput_type:s'       => \$input_type,
           );


if ($type) {
    $db->assembly_type($type);
} else {
    $type = $db->assembly_type;
}
if (!defined($type)) {
    die "No assemby type defined";
}


my $db = new Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor(-host   => $host,
                                                      -user   => $user,
                                                      -pass   => $pass,
                                                      -port   => $port,
                                                      -dbname => $dbname);


my $inputIDFactory = new Bio::EnsEMBL::Pipeline::Utils::InputIDFactory(-db => $db);

my $analysis = $db->get_AnalysisAdaptor->fetch_by_logic_name($logic_name);


if (!defined($analysis)) {
    my $analysis = new Bio::EnsEMBL::Analysis(-logic_name => $logic_name);
    $db->get_AnalysisAdaptor->store($analysis);
}

if ($slice && $contig) {
    die "Can't generate contig and slice input ids at the same time. Must be done separately";
}


if ($slice) {
 
    $input_type = "SLICE" unless $input_type;

    my @ids = $inputIDFactory->generate_slice_ids($slice_size);

} elsif ($contig) {

    $input_type = "CONTIG" unless $input_type;
    
    my @ids = $inputIDFactori->generate_contig_ids;

}

foreach my $id (@ids) {
    $db->get_StateInfoContainer->store_input_id_type_analysis($input_id,$input_type,$analysis);
}
